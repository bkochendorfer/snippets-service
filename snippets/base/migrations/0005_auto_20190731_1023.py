# Generated by Django 2.2.3 on 2019-07-31 10:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0004_auto_20190731_0924'),
    ]

    operations = [
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='background_color',
            field=models.CharField(blank=True, max_length=10, verbose_name='Background Color'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='block_button_text',
            field=models.CharField(default='Remove this', help_text='Tooltip text used for dismiss button.', max_length=50, verbose_name='Block Button Text'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='button_background_color',
            field=models.CharField(blank=True, help_text='defaults to firefox theme', max_length=20, verbose_name='Button Background Color'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='button_color',
            field=models.CharField(blank=True, help_text='defaults to firefox theme', max_length=20, verbose_name='Button Color'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='button_label',
            field=models.CharField(help_text='Text for a button next to main snippet text that links to button_url. Requires button_url.', max_length=50, verbose_name='Button Label'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='currency_code',
            field=models.CharField(default='usd', max_length=10, verbose_name='Currency Code'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='do_not_autoblock',
            field=models.BooleanField(blank=True, default=False, help_text='Used to prevent blocking the snippet after the CTA (link or button) has been clicked.', verbose_name='Do Not Autoblock'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='donation_form_url',
            field=models.URLField(default='https://donate.mozilla.org/?utm_source=desktop-snippet&utm_medium=snippet', max_length=500, validators=[django.core.validators.URLValidator(schemes=['https'])], verbose_name='Donation Form URL'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='highlight_color',
            field=models.CharField(blank=True, default='#FFE900', help_text='Paragraph em highlight color.', max_length=10, verbose_name='Highlight Color'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='monthly_checkbox_label_text',
            field=models.CharField(default='Make my donation monthly', max_length=255, verbose_name='Monthly Checkbox Label Text'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='selected_button',
            field=models.CharField(choices=[('donation_amount_first', 'First'), ('donation_amount_second', 'Second'), ('donation_amount_third', 'Third'), ('donation_amount_fourth', 'Fourth')], default='donation_amount_second', help_text="Donation amount button that's selected by default.", max_length=25, verbose_name='Selected Button'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='text_color',
            field=models.CharField(blank=True, max_length=10, verbose_name='Text Color'),
        ),
        migrations.AlterField(
            model_name='fundraisingtemplate',
            name='title_icon',
            field=models.ForeignKey(blank=True, help_text='Small icon that shows up before the title / text. 64x64px.PNG. Grayscale.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fundraising_title_icons', to='base.Icon', verbose_name='Title Icon'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='block_button_text',
            field=models.CharField(default='Remove this', help_text='Tooltip text used for dismiss button.', max_length=50, verbose_name='Block Button Text'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='do_not_autoblock',
            field=models.BooleanField(blank=True, default=False, help_text='Used to prevent blocking the snippet after the CTA (link or button) has been clicked.', verbose_name='Do Not Autoblock'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene1_button_background_color',
            field=models.CharField(blank=True, help_text='The background color of the button. Valid CSS color. Defaults to Firefox Theme Color.', max_length=20, verbose_name='Scene 1 Button Background Color'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene1_button_color',
            field=models.CharField(blank=True, help_text='The text color of the button. Valid CSS color. Defaults to Firefox Theme Color.', max_length=20, verbose_name='Scene 1 Button Color'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene1_button_label',
            field=models.CharField(default='Learn more', help_text='Label for the button on Scene 1 that leads to Scene 2.', max_length=50, verbose_name='Scene 1 Button Label'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene1_icon',
            field=models.ForeignKey(help_text='Snippet icon. 192x192px PNG.', on_delete=django.db.models.deletion.PROTECT, related_name='fxasignup_scene1_icons', to='base.Icon', verbose_name='Scene 1 Icon'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene1_text',
            field=models.TextField(help_text='Main body text of snippet. HTML subset allowed: i, b, u, strong, em, br.', verbose_name='Scene 1 Text'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene1_title',
            field=models.CharField(blank=True, help_text='Snippet title displayed before snippet text.', max_length=255, verbose_name='Scene 1 Title'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene1_title_icon',
            field=models.ForeignKey(blank=True, help_text='Small icon that shows up before the title / text. 64x64px.PNG. Grayscale.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fxasignup_scene1_title_icons', to='base.Icon', verbose_name='Scene 1 Title Icon'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene2_button_label',
            field=models.CharField(default='Sign me up', help_text='Label for form submit button.', max_length=50, verbose_name='Scene 2 Button Label'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene2_dismiss_button_text',
            field=models.CharField(default='Dismiss', help_text='Label for the dismiss button on Scene 2.', max_length=50, verbose_name='Scene 2 Dismiss Button Text'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene2_email_placeholder_text',
            field=models.CharField(default='Your email here', help_text='Value to show while input is empty.', max_length=255, verbose_name='Scene 2 Email Placeholder Text'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene2_text',
            field=models.TextField(help_text='Scene 2 main text. HTML subset allowed: i, b, u, strong, em, br.', verbose_name='Scene 2 Text'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='scene2_title',
            field=models.CharField(blank=True, help_text='Title displayed before text in scene 2.', max_length=255, verbose_name='Scene 2 Title'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='utm_campaign',
            field=models.CharField(blank=True, help_text='Value to pass through to GA as utm_campaign.', max_length=100, verbose_name='UTM Campaign'),
        ),
        migrations.AlterField(
            model_name='fxasignuptemplate',
            name='utm_term',
            field=models.CharField(blank=True, help_text='Value to pass through to GA as utm_term.', max_length=100, verbose_name='UTM Term'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='block_button_text',
            field=models.CharField(default='Remove this', help_text='Tooltip text used for dismiss button.', max_length=50, verbose_name='Block Button Text'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='do_not_autoblock',
            field=models.BooleanField(blank=True, default=False, help_text='Used to prevent blocking the snippet after the CTA (link or button) has been clicked.', verbose_name='Do Not Autoblock'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='error_text',
            field=models.TextField(help_text='Text of error message if form submission fails.', verbose_name='Error Text'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene1_button_background_color',
            field=models.CharField(blank=True, help_text='The background color of the button. Valid CSS color. Defaults to Firefox Theme Color.', max_length=20, verbose_name='Scene 1 Button Background Color'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene1_button_color',
            field=models.CharField(blank=True, help_text='The text color of the button. Valid CSS color. Defaults to Firefox Theme Color.', max_length=20, verbose_name='Scene 1 Button Color'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene1_button_label',
            field=models.CharField(default='Learn more', help_text='Label for the button on Scene 1 that leads to Scene 2.', max_length=50, verbose_name='Scene 1 Button Label'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene1_icon',
            field=models.ForeignKey(help_text='Snippet icon. 192x192px PNG.', on_delete=django.db.models.deletion.PROTECT, related_name='newsletter_scene1_icons', to='base.Icon', verbose_name='Scene 1 Icon'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene1_text',
            field=models.TextField(help_text='Main body text of snippet. HTML subset allowed: i, b, u, strong, em, br.', verbose_name='Scene 1 Text'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene1_title',
            field=models.CharField(blank=True, help_text='Snippet title displayed before snippet text.', max_length=255, verbose_name='Scene 1 Title'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene1_title_icon',
            field=models.ForeignKey(blank=True, help_text='Small icon that shows up before the title / text. 64x64px.PNG. Grayscale.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newsletter_scene1_title_icons', to='base.Icon', verbose_name='Scene 1 Title Icon'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene2_button_label',
            field=models.CharField(default='Sign me up', help_text='Label for form submit button.', max_length=50, verbose_name='Scene 2 Button Label'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene2_dismiss_button_text',
            field=models.CharField(default='Dismiss', help_text='Label for the dismiss button on Scene 2.', max_length=50, verbose_name='Scene 2 Dismiss Button Text'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene2_email_placeholder_text',
            field=models.CharField(default='Your email here', help_text='Value to show while input is empty.', max_length=255, verbose_name='Scene 2 Email Placeholder Text'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene2_newsletter',
            field=models.CharField(default='mozilla-foundation', help_text='Newsletter/basket id user is subscribing to. Must be a value from the "Slug" column here: https://basket.mozilla.org/news/.', max_length=50, verbose_name='Scene 2 Newsletter'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene2_privacy_html',
            field=models.TextField(help_text='Text and link next to the privacy checkbox. Must link to a privacy policy.', verbose_name='Scene 2 Privacy HTML'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene2_text',
            field=models.TextField(help_text='Scene 2 main text. HTML subset allowed: i, b, u, strong, em, br.', verbose_name='Scene 2 Text'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='scene2_title',
            field=models.CharField(blank=True, help_text='Title displayed before text in scene 2.', max_length=255, verbose_name='Scene 2 Title'),
        ),
        migrations.AlterField(
            model_name='newslettertemplate',
            name='success_text',
            field=models.TextField(help_text='Text of success message after form submission.', verbose_name='Success Text'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='block_button_text',
            field=models.CharField(default='Remove this', help_text='Tooltip text used for dismiss button.', max_length=50, verbose_name='Block Button Text'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='do_not_autoblock',
            field=models.BooleanField(blank=True, default=False, help_text='Used to prevent blocking the snippet after the CTA (link or button) has been clicked.', verbose_name='Do Not Autoblock'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='error_text',
            field=models.TextField(help_text='Text of error message if form submission fails.', verbose_name='Error Text'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='include_sms',
            field=models.BooleanField(blank=True, default=False, help_text='Defines whether SMS is available.', verbose_name='Include SMS'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='message_id_email',
            field=models.CharField(help_text='Newsletter/basket id representing the email message to be sent. Must be a value from the "Slug" column here: https://basket.mozilla.org/news/.', max_length=100, verbose_name='Message ID for Email'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='message_id_sms',
            field=models.CharField(blank=True, help_text='Newsletter/basket id representing the SMS message to be sent.', max_length=100, verbose_name='Message ID for SMS'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene1_button_background_color',
            field=models.CharField(blank=True, help_text='The background color of the button. Valid CSS color. Defaults to Firefox Theme Color.', max_length=20, verbose_name='Scene 1 Button Background Color'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene1_button_color',
            field=models.CharField(blank=True, help_text='The text color of the button. Valid CSS color. Defaults to Firefox Theme Color.', max_length=20, verbose_name='Scene 1 Button Color'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene1_button_label',
            field=models.CharField(default='Learn more', help_text='Label for the button on Scene 1 that leads to Scene 2.', max_length=50, verbose_name='Scene 1 Button Label'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene1_icon',
            field=models.ForeignKey(help_text='Snippet icon. 192x192 PNG.', on_delete=django.db.models.deletion.PROTECT, related_name='sendtodevice_scene1_icons', to='base.Icon', verbose_name='Scene 1 Icon'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene1_text',
            field=models.TextField(help_text='Main body text of snippet. HTML subset allowed: i, b, u, strong, em, br.', verbose_name='Scene 1 Text'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene1_title',
            field=models.CharField(blank=True, help_text='Snippet title displayed before snippet text.', max_length=255, verbose_name='Scene 1 Title'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene1_title_icon',
            field=models.ForeignKey(blank=True, help_text='Small icon that shows up before the title / text. 64x64px.PNG. Grayscale.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sendtodevice_scene1_title_icons', to='base.Icon', verbose_name='Scene 1 Title Icon'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene2_button_label',
            field=models.CharField(default='Send', help_text='Label for form submit button.', max_length=50, verbose_name='Scene 2 Button Label'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene2_disclaimer_html',
            field=models.TextField(help_text='Text and link underneath the input box.', verbose_name='Scene 2 Disclaimer HTML'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene2_dismiss_button_text',
            field=models.CharField(default='Dismiss', help_text='Label for the dismiss button on Scene 2.', max_length=50, verbose_name='Scene 2 Dismiss Button Text'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene2_icon',
            field=models.ForeignKey(help_text='Image to display above the form. 192x192px PNG.', on_delete=django.db.models.deletion.PROTECT, related_name='sendtodevice_scene2_icons', to='base.Icon', verbose_name='Scene 2 Icon'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene2_input_placeholder',
            field=models.CharField(default='Your email here', help_text='Placeholder text for email / phone number field.', max_length=255, verbose_name='Scene 2 Input Placeholder'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene2_text',
            field=models.TextField(help_text='Scene 2 main text. HTML subset allowed: i, b, u, strong, em, br.', verbose_name='Scene 2 Text'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='scene2_title',
            field=models.CharField(blank=True, help_text='Title displayed before text in scene 2.', max_length=255, verbose_name='Scene 2 Title'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='success_text',
            field=models.TextField(help_text='Text of success message after form submission.', verbose_name='Success Text'),
        ),
        migrations.AlterField(
            model_name='sendtodevicetemplate',
            name='success_title',
            field=models.TextField(help_text='Title of success message after form submission.', verbose_name='Success Title'),
        ),
        migrations.AlterField(
            model_name='simplebelowsearchtemplate',
            name='block_button_text',
            field=models.CharField(default='Remove this', help_text='Tooltip text used for dismiss button.', max_length=50, verbose_name='Block Button Text'),
        ),
        migrations.AlterField(
            model_name='simplebelowsearchtemplate',
            name='button_background_color',
            field=models.CharField(blank=True, help_text='The text color of the button. Valid CSS color.', max_length=20, verbose_name='Button Background Color'),
        ),
        migrations.AlterField(
            model_name='simplebelowsearchtemplate',
            name='button_color',
            field=models.CharField(blank=True, help_text='The text color of the button. Valid CSS color.', max_length=20, verbose_name='Button Color'),
        ),
        migrations.AlterField(
            model_name='simplebelowsearchtemplate',
            name='button_label',
            field=models.CharField(blank=True, help_text='Text for a button next to main snippet text that links to button_url. Requires button_url.', max_length=50, verbose_name='Button Label'),
        ),
        migrations.AlterField(
            model_name='simplebelowsearchtemplate',
            name='button_url',
            field=models.URLField(blank=True, help_text='A url, button_label links to this', max_length=500, validators=[django.core.validators.URLValidator(schemes=['https'])], verbose_name='Button URL'),
        ),
        migrations.AlterField(
            model_name='simplebelowsearchtemplate',
            name='do_not_autoblock',
            field=models.BooleanField(blank=True, default=False, help_text='Used to prevent blocking the snippet after the CTA (link or button) has been clicked.', verbose_name='Do Not Autoblock'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='block_button_text',
            field=models.CharField(default='Remove this', help_text='Tooltip text used for dismiss button.', max_length=50, verbose_name='Block Button Text'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='button_background_color',
            field=models.CharField(blank=True, help_text='The text color of the button. Valid CSS color.', max_length=20, verbose_name='Button Background Color'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='button_color',
            field=models.CharField(blank=True, help_text='The text color of the button. Valid CSS color.', max_length=20, verbose_name='Button Color'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='button_label',
            field=models.CharField(blank=True, help_text='Text for a button next to main snippet text that links to button_url. Requires button_url.', max_length=50, verbose_name='Button Label'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='button_url',
            field=models.URLField(blank=True, help_text='A url, button_label links to this', max_length=500, validators=[django.core.validators.URLValidator(schemes=['https'])], verbose_name='Button URL'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='do_not_autoblock',
            field=models.BooleanField(blank=True, default=False, help_text='Used to prevent blocking the snippet after the CTA (link or button) has been clicked.', verbose_name='Do Not Autoblock'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='section_title_icon',
            field=models.ForeignKey(blank=True, help_text='Section title icon. 32x32px. PNG. section_title_text must also be specified to display.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='simple_section_icons', to='base.Icon', verbose_name='Section Title Icon'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='section_title_text',
            field=models.CharField(blank=True, help_text='Section title text. section_title_icon must also be specified to display.', max_length=255, verbose_name='Section Title Text'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='section_title_url',
            field=models.URLField(blank=True, help_text='A url, section_title_text links to this', validators=[django.core.validators.URLValidator(schemes=['https'])], verbose_name='Section Title URL'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='title_icon',
            field=models.ForeignKey(blank=True, help_text='Small icon that shows up before the title / text. 64x64px.PNG. Grayscale.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='simple_title_icons', to='base.Icon', verbose_name='Title Icon'),
        ),
    ]
